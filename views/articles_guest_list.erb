<div class="categories hidden">
  <button>business</button>
  <button>education</button>
  <button>opinion</button>
  <button>foreign</button>
</div>

<div class="article_content hidden">
 <main>
  <div class="main">
    <p class="previous"><i class="fas fa-angle-left fa-2x"></i></p>
    <div class="article-container">
      <div class="article-top">
        <p class="date"></p>
      </div>
      <div class="article-bottom">
        <form action="/articles/bookmarks" method="post">
          <input class="article_id" type="hidden" name="article_id"/>
          <input class="folder_name" type="hidden" name="folder_name"/>
          <div class="article-header">
            <h4></h4> 
            <i class="cake-btn fas fa-birthday-cake fa-2x"></i>
          </div>
        </form>
        <p class="result"></p>
      </div>
    </div>
    <p class="next"><i class="fas fa-angle-right fa-2x"></i></p>
  </div>
</div>

<script>
const icon = document.querySelector('.article_content .cake-btn')
const articleId = document.querySelector('.article_id')
const categories = document.querySelector('.categories')
const articleContent = document.querySelector('.article_content')
const result = document.querySelector('.result')
const title = document.querySelector('h4')
const publishedDate = document.querySelector('.date')
const nextBtn = document.querySelector('.next')
const previousBtn = document.querySelector('.previous')

const birthYear = <%=@year%>;
const currentYear = new Date().getFullYear()
const selectedDate = new Date()
selectedDate.setMonth(<%=@month%> -1)
selectedDate.setDate(<%=@day%>)

function getArticle(category) {
  fetch(`https://api.nytimes.com/svc/search/v2/articlesearch.json?q=${category}&fq=pub_date:${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}&api-key=EXHiMpBT0AdjyWCGX1Gbq7mygBVEMgfr`)
  .then(res => res.json())
  .then(data => {
    articleContent.classList.remove('hidden')
    categories.classList.remove('hidden')
    const nextDate = new Date(selectedDate).setYear(selectedDate.getFullYear() + 1)
    
    if(nextDate > new Date() ) {
      nextBtn.classList.add('fade')
    } else {
      nextBtn.classList.remove('fade')
    }
    if (selectedDate.getFullYear() === birthYear) {
      previousBtn.classList.add('fade')
    } else {
      previousBtn.classList.remove('fade')
    } 
  
    if(data === []) {
      result.textContent = "Sorry, We cannot find any articles for this year!"
      return
    }
    
    num = 0
    if(data.response)
    if(data.response.docs.length === 0) {
      result.textContent = "We couldn't find anything for this year"
      return
    } 
    result.textContent = data.response.docs[num].lead_paragraph
    title.textContent = data.response.docs[num].headline.main
    articleId.value = data.response.docs[num]._id

    const anchor = document.createElement('a')
    anchor.setAttribute('href', data.response.docs[num].web_url)
    anchor.textContent = "[...]"
    result.appendChild(anchor)
    publishedDate.textContent = data.response.docs[num].pub_date.slice(0,10).replace(/-/g, " ")
  })
}

if(selectedDate > new Date()) {
  selectedDate.setYear(selectedDate.getFullYear()-1)
  getArticle("election")
} else {
  getArticle("election")
}


function differentCategory(e) {
  getArticle(e.target.textContent)
}


function previousPage(e) {
  if(selectedDate.getFullYear() === birthYear) {
    return
  }
  selectedDate.setYear(selectedDate.getFullYear() - 1)
  getArticle("election")
}

function nextPage(e) {
 
  if(selectedDate.setYear(selectedDate.getFullYear() + 1) > new Date()) {
    return
  }
  
  selectedDate.setYear(selectedDate.getFullYear() + 1)
  getArticle("election")
}

function labelFolder(str) {
  var lowerCaseStr = str.toLowerCase()
  var firstLetter = lowerCaseStr[0].toUpperCase()
  return firstLetter + lowerCaseStr.slice(1)
}

function saveToBookmark(e) {
  e.preventDefault()
  const promptValue = prompt("Please enter the folder name", "ex)Grandma")
  let folderName = document.querySelector('.article_content .folder_name')
  if(promptValue === null) {
    return
  }
  var changedFolderName = labelFolder(promptValue)
  folderName.value = changedFolderName

  
  fetch(`/api/articles/bookmarks?article_id=${articleId.value}&folder_name=${folderName.value}`, {method: "post"})
  .then(res => res.json())
  .then(data => icon.style.color = "white")
}

nextBtn.addEventListener('click', nextPage)
previousBtn.addEventListener('click', previousPage)
categories.addEventListener('click', differentCategory)
icon.addEventListener('click', saveToBookmark)
</script>